<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://bisso-jk.github.io/</id><title>Bisso</title><subtitle>Java</subtitle> <updated>2022-08-18T08:13:51+09:00</updated> <author> <name>Bisso</name> <uri>https://bisso-jk.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://bisso-jk.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://bisso-jk.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Bisso </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Marshalling vs Serialization</title><link href="https://bisso-jk.github.io/posts/marshalling-and-serialization/" rel="alternate" type="text/html" title="Marshalling vs Serialization" /><published>2022-08-17T08:20:00+09:00</published> <updated>2022-08-17T08:20:00+09:00</updated> <id>https://bisso-jk.github.io/posts/marshalling-and-serialization/</id> <content src="https://bisso-jk.github.io/posts/marshalling-and-serialization/" /> <author> <name>Bisso</name> </author> <category term="Java" /> <category term="Theory" /> <summary> Mashalling vs Serialization Mashalling 설명 Wikipedia 한 객체의 메모리에서 표현방식을 저장 또는 전송에 적합한 다른 데이터 형식으로 변환하는 과정이다. 또한 이는 데이터를 컴퓨터 프로그램의 서로 다른 부분 간에 혹은 한 프로그램에서 다른 프로그램으로 이동해야 할 때도 사용된다. 마셜링은 직렬화(serialization)와 유사하며 한 오브젝트(여기서는 직렬화 된 오브젝트)로 멀리 떨어진 오브젝트와 통신하기 위해 사용된다 Serialization 설명 Wikipedia 직렬화(serialization)는 컴퓨터 과학의 데이터 스토리지 문맥에서 데이터 구조나 오브젝트 상태를 동일하거나 다른 컴퓨터 환경에 저장(이를테면 파일이나 메모리 버... </summary> </entry> <entry><title>Frame과 Bounds 차이</title><link href="https://bisso-jk.github.io/posts/frame-diff-bounds/" rel="alternate" type="text/html" title="Frame과 Bounds 차이" /><published>2022-07-08T08:56:00+09:00</published> <updated>2022-07-08T08:56:00+09:00</updated> <id>https://bisso-jk.github.io/posts/frame-diff-bounds/</id> <content src="https://bisso-jk.github.io/posts/frame-diff-bounds/" /> <author> <name>Bisso</name> </author> <category term="ios" /> <category term="view" /> <summary> Frame vs Bounds Frame The frame rectangle, which describes the view’s location and size in its superview’s coordinate system. Superview의 좌표계에서 위치와 크기 Bounds The bounds rectangle, which describes the view’s location and size in its own coordinate system. 자신만의 좌표계에서 위치와 크기 정리 중 TODO: 예제 정리 중 </summary> </entry> <entry><title>Jekyll 블로깅을 쉽게하기 위한 Template 만들기</title><link href="https://bisso-jk.github.io/posts/webstorm-template/" rel="alternate" type="text/html" title="Jekyll 블로깅을 쉽게하기 위한 Template 만들기" /><published>2022-05-10T08:37:00+09:00</published> <updated>2022-05-10T08:37:00+09:00</updated> <id>https://bisso-jk.github.io/posts/webstorm-template/</id> <content src="https://bisso-jk.github.io/posts/webstorm-template/" /> <author> <name>Bisso</name> </author> <category term="Blogging" /> <category term="Template" /> <summary> Jekyll Custom Markdown Template 만들기 Jekyll Custom Markdown Template(Jetbrains 제품 기준) 매일 파일 만들기가 불편하여 오늘 갑자기 Custom Template을 만들고 싶어서 블로깅 블로깅.. Eclipse 쓸 때, Custom Template 만들어서 썼던 기억이 있어서 검색해서 만들어 보았어요 자 지금 시작합니다 1. IntelliJ 혹은 Webstorm (저는 Webstorm) 실행 2. Mac : Cmd + Shift + A, Windows : Ctrl + Shift + A -&amp;gt; action 검색창 3. 'file template' 검색 &amp;lt;br&amp;gt; 4. file template 선택 &amp;lt;br&amp;g... </summary> </entry> <entry><title>Spring Batch + Quartz 2편</title><link href="https://bisso-jk.github.io/posts/spring-quartz/" rel="alternate" type="text/html" title="Spring Batch + Quartz 2편" /><published>2022-03-22T09:46:00+09:00</published> <updated>2022-03-22T09:46:00+09:00</updated> <id>https://bisso-jk.github.io/posts/spring-quartz/</id> <content src="https://bisso-jk.github.io/posts/spring-quartz/" /> <author> <name>Bisso</name> </author> <category term="Develop" /> <category term="Spring Batch+Quartz" /> <summary> 간단한 Spring Batch 설명을 마치고 Quartz 설명을 시작하도록 하겠습니다. 목차 Quartz란? Quartz 구조 Quartz 설정 Quartz 적용 Quartz 실행 마치며 참고자료 1. Quartz란? Quartz는 Terracotta라는 회사에 의해 개발된 Job Scheduling 라이브러리 DB기반으로(In-memory 환경에서 안됨) 스케줄러 Clustering 기능 제공 In-memory Job Scheduler도 제공 2. Quartz 구조 Quartz Architect Image Job : Scheduling 할 실제 작업을 구현한 객체 JobFactory : ... </summary> </entry> <entry><title>Spring Batch + Quartz 1편</title><link href="https://bisso-jk.github.io/posts/spring-batch/" rel="alternate" type="text/html" title="Spring Batch + Quartz 1편" /><published>2022-03-21T09:46:00+09:00</published> <updated>2022-03-21T09:46:00+09:00</updated> <id>https://bisso-jk.github.io/posts/spring-batch/</id> <content src="https://bisso-jk.github.io/posts/spring-batch/" /> <author> <name>Bisso</name> </author> <category term="Develop" /> <category term="Spring Batch+Quartz" /> <summary> 이번에 Spring Batch와 Quartz를 주제로 공유드리고자 합니다. Spring Batch만 사용하였다가 Quartz의 Clustering 기능이 필요하게 되어 두개의 기술을 한 페이지에 구성하려니 스크롤 내리는게 귀찮으실 것 같아 Spring Batch를 1편에 Quartz를 2편으로 구성하였습니다. 두개의 블로그 중에 필요한 블로그를 참고해주시면 좋을 것 같습니다. 자 그럼 시작하겠습니다!! 목차 Spring Batch란? Spring Batch 설명 Spring Batch 적용 마치며 참고자료 1. Spring Batch란? 일반적으로 배치란 일괄처리(한꺼번에 처리)를 의미 로깅/추적, 트랜잭션 관리, job ... </summary> </entry> </feed>
